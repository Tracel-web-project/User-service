name: CI - Build and Push User Service

on:
  push:
    branches:
      - main

env:
  SERVICE: user-service
  IMAGE_SHA: ${{ secrets.DOCKERHUB_USERNAME }}/user-service:${{ github.sha }}
  IMAGE_LATEST: ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest
  GITOPS_REPO: Tracel-web-project/Travel-gitOps
  GITOPS_DEPLOYMENT_PATH: apps/dev/user/kustomization.yaml
  GITOPS_BRANCH_PREFIX: ci/update-user-service

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      # ===== Lint =====
      - name: Lint
        run: npm run lint

      # ===== Unit Tests =====
      - name: Run Tests
        run: npm test -- --watchAll=false

      # ===== SAST (CodeQL) =====
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      # ===== SCA / Trivy (dependency scan) =====
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.44.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.44.0_Linux-64bit.deb
      - name: Scan Node modules
        run: trivy fs --security-checks vuln,config,node /github/workspace

      # ===== DAST (OWASP ZAP Baseline Scan) =====
      - name: Start App in Background
        run: |
          npm run build
          npx serve -s build -l 5000 &
          sleep 10
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'http://localhost:5000'
          rules_file_name: '.zap/rules.yml'

      # ===== Docker Build & Push =====
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_SHA }}
            ${{ env.IMAGE_LATEST }}

      # ===== GitOps Update =====
      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITOPS_REPO }}
          path: gitops
          token: ${{ secrets.GITOPS_PAT }}

      - name: Update Kustomization
        run: |
          cd gitops/apps/dev/user
          kustomize edit set image ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.SERVICE }}=${{ env.IMAGE_SHA }}

      - name: Commit and Push changes
        run: |
          cd gitops
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b ${{ env.GITOPS_BRANCH_PREFIX }}-${{ github.sha }}
          git add .
          git commit -m "Update ${{ env.SERVICE }} image to ${{ env.IMAGE_SHA }}"
          git push origin HEAD
