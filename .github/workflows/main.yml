name: CI - Build and Push User Service

on:
  push:
    branches:
      - main

env:
  SERVICE: user-service
  IMAGE_SHA: ${{ secrets.DOCKERHUB_USERNAME }}/user-service:${{ github.sha }}
  IMAGE_LATEST: ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest
  GITOPS_REPO: Tracel-web-project/Travel-gitOps
  GITOPS_DEPLOYMENT_PATH: apps/dev/user/kustomization.yaml
  GITOPS_BRANCH_PREFIX: ci/update-user-service

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ===== Python setup =====
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint pytest bandit safety

      # ===== Lint =====
      - name: Lint with pylint
        run: pylint **/*.py || true   # continue even if lint fails

      # ===== Unit Tests =====
      - name: Run Unit Tests
        run: pytest --maxfail=1 --disable-warnings -q || true

      # ===== SAST / Security =====
      - name: sAST Static Analysis with Bandit
        run: bandit -r . -lll || true

      # ===== SCA (Dependency Check) =====
      - name: SCA - Dependency Scan with Safety
        run: safety check || true

      # ===== DAST =====
      # Optional: if your backend exposes an HTTP API
      - name: Start Backend
        run: |
          python app.py &   # adjust to your entrypoint
          sleep 10
      - name: DAST Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'http://localhost:5000'   # adjust to your backend URL
          rules_file_name: '.zap/rules.yml'
        continue-on-error: true

      # ===== Docker Build & Push =====
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_SHA }}
            ${{ env.IMAGE_LATEST }}

      # ===== GitOps Update =====
      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITOPS_REPO }}
          path: gitops
          token: ${{ secrets.GITOPS_PAT }}

      - name: Update Kustomization
        run: |
          cd gitops/apps/dev/user
          kustomize edit set image ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.SERVICE }}=${{ env.IMAGE_SHA }}

      - name: Commit and Push changes
        run: |
          cd gitops
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b ${{ env.GITOPS_BRANCH_PREFIX }}-${{ github.sha }}
          git add .
          git commit -m "Update ${{ env.SERVICE }} image to ${{ env.IMAGE_SHA }}"
          git push origin HEAD
